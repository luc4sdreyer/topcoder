eclipse.preferences.version=1
problemStatement=YetAnotherCardGame.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.8.0_31" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement" id\="ProblemStatement0">\n  <void property\="className">\n   <string>YetAnotherCardGame</string>\n  </void>\n  <void property\="contestName">\n   <string>2015 TopCoder Open Algorithm - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;YetAnotherCardGame&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;Petr and Snuke are playing a cooperative card game.\nThe game is played with special cards\: each card is labeled with some positive integer.\nThe integers on cards are not necessarily distinct.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nAt the beginning of the game Petr is holding some cards in his hand and Snuke is holding all the other cards in his hand.\nYou are given int[]s &lt;b&gt;petr&lt;/b&gt; and &lt;b&gt;snuke&lt;/b&gt; that describe the state at the beginning of the game\:\nthe elements of &lt;b&gt;petr&lt;/b&gt; are the numbers on Petr&apos;s cards and the elements of &lt;b&gt;snuke&lt;/b&gt; are the numbers on Snuke&apos;s cards.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nDuring the game the players will place some of their cards onto a pile.\nInitially, the pile is empty.\nThe players take alternating turns, Petr goes first.\nIn each turn, if the current player has no cards in his hand, the game ends.\nOtherwise, the player must make exactly one valid move.\nThere are three types of valid moves\:\n&lt;ul&gt;\n&lt;li&gt;If the pile is empty, the player may choose any card and place it onto the pile.&lt;/li&gt;\n&lt;li&gt;If the pile is not empty, the player may choose any card and place it on top of the pile. However, this move is only valid if the number on the new card is strictly greater than the number on the card that was previously on the top of the pile.&lt;/li&gt;\n&lt;li&gt;The player may always choose one of his cards and eat it.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;br&gt;&lt;/br&gt;\nPetr and Snuke have a common goal\: they want to create a pile with as many cards as possible.\nReturn the size of the pile at the end of the game, assuming that they cooperate and play the game optimally.\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;YetAnotherCardGame&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;maxCards&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[], int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int maxCards(int[] petr, int[] snuke)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stack limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;petr&lt;/b&gt; and &lt;b&gt;snuke&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;petr&lt;/b&gt; and &lt;b&gt;snuke&lt;/b&gt; will contain the same number of elements.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element in &lt;b&gt;petr&lt;/b&gt; and &lt;b&gt;snuke&lt;/b&gt; will be between 1 and 100, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2, 5}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{3, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;One optimal way is as follows.\n&lt;ul&gt;\n&lt;li&gt;Petr puts 2 onto the pile.&lt;/li&gt;\n&lt;li&gt;Snuke puts 3 onto the pile.&lt;/li&gt;\n&lt;li&gt;Petr puts 5 onto the pile.&lt;/li&gt;\n&lt;li&gt;Snuke eats 1.&lt;/li&gt;\n&lt;li&gt;The game ends because Petr has no cards in his hand.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 1, 1, 1, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 1, 1, 1, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The integers on cards are not necessarily distinct.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 4, 6, 7, 3}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 7, 1, 5, 7}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{19, 99, 86, 30, 98, 68, 73, 92, 37, 69, 93, 28, 58, 36, 86, 32, 46, 34, 71, 29}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{28, 29, 22, 75, 78, 75, 39, 41, 5, 14, 100, 28, 51, 42, 9, 25, 12, 59, 98, 83}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 28&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>maxCards</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>petr</string>\n   </void>\n   <void method\="add">\n    <string>snuke</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="2">\n          <void index\="0">\n           <int>2</int>\n          </void>\n          <void index\="1">\n           <int>5</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="2">\n          <void index\="0">\n           <int>3</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>3</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n          <void index\="4">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n          <void index\="4">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>4</int>\n          </void>\n          <void index\="2">\n           <int>6</int>\n          </void>\n          <void index\="3">\n           <int>7</int>\n          </void>\n          <void index\="4">\n           <int>3</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>7</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n          <void index\="3">\n           <int>5</int>\n          </void>\n          <void index\="4">\n           <int>7</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>6</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="20">\n          <void index\="0">\n           <int>19</int>\n          </void>\n          <void index\="1">\n           <int>99</int>\n          </void>\n          <void index\="2">\n           <int>86</int>\n          </void>\n          <void index\="3">\n           <int>30</int>\n          </void>\n          <void index\="4">\n           <int>98</int>\n          </void>\n          <void index\="5">\n           <int>68</int>\n          </void>\n          <void index\="6">\n           <int>73</int>\n          </void>\n          <void index\="7">\n           <int>92</int>\n          </void>\n          <void index\="8">\n           <int>37</int>\n          </void>\n          <void index\="9">\n           <int>69</int>\n          </void>\n          <void index\="10">\n           <int>93</int>\n          </void>\n          <void index\="11">\n           <int>28</int>\n          </void>\n          <void index\="12">\n           <int>58</int>\n          </void>\n          <void index\="13">\n           <int>36</int>\n          </void>\n          <void index\="14">\n           <int>86</int>\n          </void>\n          <void index\="15">\n           <int>32</int>\n          </void>\n          <void index\="16">\n           <int>46</int>\n          </void>\n          <void index\="17">\n           <int>34</int>\n          </void>\n          <void index\="18">\n           <int>71</int>\n          </void>\n          <void index\="19">\n           <int>29</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="20">\n          <void index\="0">\n           <int>28</int>\n          </void>\n          <void index\="1">\n           <int>29</int>\n          </void>\n          <void index\="2">\n           <int>22</int>\n          </void>\n          <void index\="3">\n           <int>75</int>\n          </void>\n          <void index\="4">\n           <int>78</int>\n          </void>\n          <void index\="5">\n           <int>75</int>\n          </void>\n          <void index\="6">\n           <int>39</int>\n          </void>\n          <void index\="7">\n           <int>41</int>\n          </void>\n          <void index\="8">\n           <int>5</int>\n          </void>\n          <void index\="9">\n           <int>14</int>\n          </void>\n          <void index\="10">\n           <int>100</int>\n          </void>\n          <void index\="11">\n           <int>28</int>\n          </void>\n          <void index\="12">\n           <int>51</int>\n          </void>\n          <void index\="13">\n           <int>42</int>\n          </void>\n          <void index\="14">\n           <int>9</int>\n          </void>\n          <void index\="15">\n           <int>25</int>\n          </void>\n          <void index\="16">\n           <int>12</int>\n          </void>\n          <void index\="17">\n           <int>59</int>\n          </void>\n          <void index\="18">\n           <int>98</int>\n          </void>\n          <void index\="19">\n           <int>83</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>28</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
