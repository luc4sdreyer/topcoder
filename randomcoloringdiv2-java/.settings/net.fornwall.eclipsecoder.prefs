eclipse.preferences.version=1
problemStatement=RandomColoringDiv2.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_07" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>RandomColoringDiv2</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 540 DIV 2 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;RandomColoringDiv2&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;Little Arthur has a new frisbee and he would like to color it. A frisbee has the shape of a disc. Arthur will color the disc using two colors\: one for the top side, one for the bottom side.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nEach color is defined by three integer components\: R, G, and B (meaning red, green, and blue, respectively), where 0 &amp;lt;\= R &amp;lt; &lt;b&gt;maxR&lt;/b&gt;, 0 &amp;lt;\= G &amp;lt; &lt;b&gt;maxG&lt;/b&gt;, and 0 &amp;lt;\= B &amp;lt; &lt;b&gt;maxB&lt;/b&gt;. It is known that Arthur can use any of the &lt;b&gt;maxR&lt;/b&gt;*&lt;b&gt;maxG&lt;/b&gt;*&lt;b&gt;maxB&lt;/b&gt; possible colors.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nArthur is going to perform the coloring in the following way\:\n&lt;ul&gt;\n&lt;li&gt;In the first step, he will color the top side of the frisbee using the color (&lt;b&gt;startR&lt;/b&gt;, &lt;b&gt;startG&lt;/b&gt;, &lt;b&gt;startB&lt;/b&gt;).&lt;/li&gt;\n&lt;li&gt;In the second step, he will color the bottom side of the frisbee using a color that makes a good transition from the first color. (This is explained below.)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;br&gt;&lt;/br&gt;\nA transition from color (R, G, B) to color (R&apos;, G&apos;, B&apos;) is called good if all components differ by at most &lt;b&gt;d2&lt;/b&gt; units (formally, |R - R&apos;| &amp;lt;\= &lt;b&gt;d2&lt;/b&gt;, |G - G&apos;| &amp;lt;\= &lt;b&gt;d2&lt;/b&gt;, |B - B&apos;| &amp;lt;\= &lt;b&gt;d2&lt;/b&gt;) and at least one component differs by at least &lt;b&gt;d1&lt;/b&gt; units (formally, at least one of the conditions |R - R&apos;| &amp;gt;\= &lt;b&gt;d1&lt;/b&gt;, |G - G&apos;| &amp;gt;\= &lt;b&gt;d1&lt;/b&gt;, |B - B&apos;| &amp;gt;\= &lt;b&gt;d1&lt;/b&gt; holds). Intuitively, a transition between two colors is called good if they are neither too similar, nor too different.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nAfter coloring the top side Arthur is wondering how many different options there are now for the color of the bottom side of the frisbee.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nGiven ints &lt;b&gt;maxR&lt;/b&gt;, &lt;b&gt;maxG&lt;/b&gt;, &lt;b&gt;maxB&lt;/b&gt;, &lt;b&gt;startR&lt;/b&gt;, &lt;b&gt;startG&lt;/b&gt;, &lt;b&gt;startB&lt;/b&gt;, &lt;b&gt;d1&lt;/b&gt;, and &lt;b&gt;d2&lt;/b&gt;, return the number of valid colors that make a good transition from the color (&lt;b&gt;startR&lt;/b&gt;, &lt;b&gt;startG&lt;/b&gt;, &lt;b&gt;startB&lt;/b&gt;).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;RandomColoringDiv2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;getCount&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int, int, int, int, int, int, int, int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int getCount(int maxR, int maxG, int maxB, int startR, int startG, int startB, int d1, int d2)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;maxR&lt;/b&gt;, &lt;b&gt;maxG&lt;/b&gt; and &lt;b&gt;maxB&lt;/b&gt; will each be between 1 and 100, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;startR&lt;/b&gt; will be between 0 and &lt;b&gt;maxR&lt;/b&gt;-1, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;startG&lt;/b&gt; will be between 0 and &lt;b&gt;maxG&lt;/b&gt;-1, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;startB&lt;/b&gt; will be between 0 and &lt;b&gt;maxB&lt;/b&gt;-1, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;d1&lt;/b&gt; and &lt;b&gt;d2&lt;/b&gt; will each be between 0 and 100, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;d1&lt;/b&gt; will be less than or equal to &lt;b&gt;d2&lt;/b&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Only the R component can change here. It has to change by at least 0 and at most 1. Thus the colors that make a good transition from color (2, 0, 0) here are (1, 0, 0), (2, 0, 0), and (3, 0, 0).&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Colors that make a good transition from color (0, 0, 0) here are (3, 0, 0), (3, 0, 1), (3, 1, 0), and (3, 1, 1).&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;At least one component has to change by 5. There exists no color that makes a good transition from color (0, 0, 0) within the respective &lt;b&gt;maxR&lt;/b&gt;, &lt;b&gt;maxG&lt;/b&gt;, &lt;b&gt;maxB&lt;/b&gt; constraints.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;9&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;10&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;10&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 540&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;All valid colors make a good transition from color (1, 2, 3).&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;9&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;10&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;10&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 330&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;5)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;49&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;59&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;53&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;12&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;23&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;13&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;11&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;22&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 47439&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>getCount</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>maxR</string>\n   </void>\n   <void method\="add">\n    <string>maxG</string>\n   </void>\n   <void method\="add">\n    <string>maxB</string>\n   </void>\n   <void method\="add">\n    <string>startR</string>\n   </void>\n   <void method\="add">\n    <string>startG</string>\n   </void>\n   <void method\="add">\n    <string>startB</string>\n   </void>\n   <void method\="add">\n    <string>d1</string>\n   </void>\n   <void method\="add">\n    <string>d2</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase0"/>\n          <int>3</int>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="8">\n        <void index\="0">\n         <int>5</int>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n        <void index\="2">\n         <int>1</int>\n        </void>\n        <void index\="3">\n         <int>2</int>\n        </void>\n        <void index\="4">\n         <int>0</int>\n        </void>\n        <void index\="5">\n         <int>0</int>\n        </void>\n        <void index\="6">\n         <int>0</int>\n        </void>\n        <void index\="7">\n         <int>1</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase1"/>\n          <int>4</int>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="8">\n        <void index\="0">\n         <int>4</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <int>2</int>\n        </void>\n        <void index\="3">\n         <int>0</int>\n        </void>\n        <void index\="4">\n         <int>0</int>\n        </void>\n        <void index\="5">\n         <int>0</int>\n        </void>\n        <void index\="6">\n         <int>3</int>\n        </void>\n        <void index\="7">\n         <int>3</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase2"/>\n          <int>0</int>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="8">\n        <void index\="0">\n         <int>4</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <int>2</int>\n        </void>\n        <void index\="3">\n         <int>0</int>\n        </void>\n        <void index\="4">\n         <int>0</int>\n        </void>\n        <void index\="5">\n         <int>0</int>\n        </void>\n        <void index\="6">\n         <int>5</int>\n        </void>\n        <void index\="7">\n         <int>5</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase3"/>\n          <int>540</int>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="8">\n        <void index\="0">\n         <int>6</int>\n        </void>\n        <void index\="1">\n         <int>9</int>\n        </void>\n        <void index\="2">\n         <int>10</int>\n        </void>\n        <void index\="3">\n         <int>1</int>\n        </void>\n        <void index\="4">\n         <int>2</int>\n        </void>\n        <void index\="5">\n         <int>3</int>\n        </void>\n        <void index\="6">\n         <int>0</int>\n        </void>\n        <void index\="7">\n         <int>10</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase4"/>\n          <int>330</int>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="8">\n        <void index\="0">\n         <int>6</int>\n        </void>\n        <void index\="1">\n         <int>9</int>\n        </void>\n        <void index\="2">\n         <int>10</int>\n        </void>\n        <void index\="3">\n         <int>1</int>\n        </void>\n        <void index\="4">\n         <int>2</int>\n        </void>\n        <void index\="5">\n         <int>3</int>\n        </void>\n        <void index\="6">\n         <int>4</int>\n        </void>\n        <void index\="7">\n         <int>10</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase5">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase5">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase5"/>\n          <int>47439</int>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="8">\n        <void index\="0">\n         <int>49</int>\n        </void>\n        <void index\="1">\n         <int>59</int>\n        </void>\n        <void index\="2">\n         <int>53</int>\n        </void>\n        <void index\="3">\n         <int>12</int>\n        </void>\n        <void index\="4">\n         <int>23</int>\n        </void>\n        <void index\="5">\n         <int>13</int>\n        </void>\n        <void index\="6">\n         <int>11</int>\n        </void>\n        <void index\="7">\n         <int>22</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
