eclipse.preferences.version=1
problemStatement=TomekPhone.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_10" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>TomekPhone</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 560 DIV 2 - 500 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;TomekPhone&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;\nTomek thinks that smartphones are overrated.\nHe plans to release a new cellphone with an old-school keyboard, which may require you to tap a key multiple times to type a single letter.\nFor example, if the keyboard has two keys, one with the letters &quot;adef&quot; and the other one with the letters &quot;zyx&quot;, then typing &apos;a&apos; requires one keystroke, typing &apos;f&apos; requires four keystrokes, typing &apos;y&apos; requires two keystrokes, and so on.\n&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;\nTomek has already designed the keyboard&apos;s layout.\nThat is, he already knows the number of keys on the keyboard, and for each key he knows the maximum number of letters it may hold.\nHe now wants to create a specific keyboard for a language that uses N different letters.\nHe has a large body of text in this language, and he already analyzed it to find the frequencies of all N letters of its alphabet.\n&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;\nYou are given a int[] &lt;b&gt;frequencies&lt;/b&gt; with N elements.\nEach element of &lt;b&gt;frequencies&lt;/b&gt; is the number of times one of the letters in Tomek&apos;s alphabet appears in the text he has.\nEach element of &lt;b&gt;frequencies&lt;/b&gt; will be strictly positive.\n(I.e., each of the N letters occurs at least once in Tomek&apos;s text.)\n&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;\nYou are also given a int[] &lt;b&gt;keySize&lt;/b&gt;.\nThe number of elements of &lt;b&gt;keySize&lt;/b&gt; is the number of keys on Tomek&apos;s keyboard.\nEach element of &lt;b&gt;keySize&lt;/b&gt; gives the maximal number of letters on one of the keys.\n&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;\nFind an assignment of letters to keys that minimizes the number of keystrokes needed to type Tomek&apos;s entire text.\nReturn that minimum number of keystrokes.\nIf there is not enough room on the keys and some letters of the alphabet won&apos;t fit, return -1 instead.\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;TomekPhone&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;minKeystrokes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[], int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int minKeystrokes(int[] frequencies, int[] keySizes)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;frequencies&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;frequencies&lt;/b&gt; will be between 1 and 1,000, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;keySizes&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;keySizes&lt;/b&gt; will be between 1 and 50, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{7,3,4,1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2,2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 19&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Tomek&apos;s language has four letters.\nLet us call them A, B, C, and D.\nTomek&apos;s text contains seven As, three Bs, four Cs, and one D.\nThe keyboard has two keys, each of them may contain at most two letters.\nOne optimal solution is to use the keys &quot;AD&quot; and &quot;CB&quot;.\nWe can then type each A and each C using a single keystroke, and we need two keystrokes for each B and each D.\nTherefore, the total number of keystrokes when typing the entire text will be 7*1 + 3*2 + 4*1 + 1*2 \= 19.\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{13,7,4,20}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2,1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: -1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;There is not enough space on the keys to fit all four letters.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{11,23,4,50,1000,7,18}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{3,1,4}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1164&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{100,1000,1,10}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{50}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1234&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{10,10,10,10,10,10,10,10}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3353&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>minKeystrokes</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>frequencies</string>\n   </void>\n   <void method\="add">\n    <string>keySizes</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>7</int>\n          </void>\n          <void index\="1">\n           <int>3</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="2">\n          <void index\="0">\n           <int>2</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>19</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>13</int>\n          </void>\n          <void index\="1">\n           <int>7</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n          <void index\="3">\n           <int>20</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="2">\n          <void index\="0">\n           <int>2</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>-1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="7">\n          <void index\="0">\n           <int>11</int>\n          </void>\n          <void index\="1">\n           <int>23</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n          <void index\="3">\n           <int>50</int>\n          </void>\n          <void index\="4">\n           <int>1000</int>\n          </void>\n          <void index\="5">\n           <int>7</int>\n          </void>\n          <void index\="6">\n           <int>18</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>3</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>1164</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>100</int>\n          </void>\n          <void index\="1">\n           <int>1000</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n          <void index\="3">\n           <int>10</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="1">\n          <void index\="0">\n           <int>50</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>1234</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="50">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>3</int>\n          </void>\n          <void index\="3">\n           <int>4</int>\n          </void>\n          <void index\="4">\n           <int>5</int>\n          </void>\n          <void index\="5">\n           <int>6</int>\n          </void>\n          <void index\="6">\n           <int>7</int>\n          </void>\n          <void index\="7">\n           <int>8</int>\n          </void>\n          <void index\="8">\n           <int>9</int>\n          </void>\n          <void index\="9">\n           <int>10</int>\n          </void>\n          <void index\="10">\n           <int>11</int>\n          </void>\n          <void index\="11">\n           <int>12</int>\n          </void>\n          <void index\="12">\n           <int>13</int>\n          </void>\n          <void index\="13">\n           <int>14</int>\n          </void>\n          <void index\="14">\n           <int>15</int>\n          </void>\n          <void index\="15">\n           <int>16</int>\n          </void>\n          <void index\="16">\n           <int>17</int>\n          </void>\n          <void index\="17">\n           <int>18</int>\n          </void>\n          <void index\="18">\n           <int>19</int>\n          </void>\n          <void index\="19">\n           <int>20</int>\n          </void>\n          <void index\="20">\n           <int>21</int>\n          </void>\n          <void index\="21">\n           <int>22</int>\n          </void>\n          <void index\="22">\n           <int>23</int>\n          </void>\n          <void index\="23">\n           <int>24</int>\n          </void>\n          <void index\="24">\n           <int>25</int>\n          </void>\n          <void index\="25">\n           <int>26</int>\n          </void>\n          <void index\="26">\n           <int>27</int>\n          </void>\n          <void index\="27">\n           <int>28</int>\n          </void>\n          <void index\="28">\n           <int>29</int>\n          </void>\n          <void index\="29">\n           <int>30</int>\n          </void>\n          <void index\="30">\n           <int>31</int>\n          </void>\n          <void index\="31">\n           <int>32</int>\n          </void>\n          <void index\="32">\n           <int>33</int>\n          </void>\n          <void index\="33">\n           <int>34</int>\n          </void>\n          <void index\="34">\n           <int>35</int>\n          </void>\n          <void index\="35">\n           <int>36</int>\n          </void>\n          <void index\="36">\n           <int>37</int>\n          </void>\n          <void index\="37">\n           <int>38</int>\n          </void>\n          <void index\="38">\n           <int>39</int>\n          </void>\n          <void index\="39">\n           <int>40</int>\n          </void>\n          <void index\="40">\n           <int>41</int>\n          </void>\n          <void index\="41">\n           <int>42</int>\n          </void>\n          <void index\="42">\n           <int>43</int>\n          </void>\n          <void index\="43">\n           <int>44</int>\n          </void>\n          <void index\="44">\n           <int>45</int>\n          </void>\n          <void index\="45">\n           <int>46</int>\n          </void>\n          <void index\="46">\n           <int>47</int>\n          </void>\n          <void index\="47">\n           <int>48</int>\n          </void>\n          <void index\="48">\n           <int>49</int>\n          </void>\n          <void index\="49">\n           <int>50</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="8">\n          <void index\="0">\n           <int>10</int>\n          </void>\n          <void index\="1">\n           <int>10</int>\n          </void>\n          <void index\="2">\n           <int>10</int>\n          </void>\n          <void index\="3">\n           <int>10</int>\n          </void>\n          <void index\="4">\n           <int>10</int>\n          </void>\n          <void index\="5">\n           <int>10</int>\n          </void>\n          <void index\="6">\n           <int>10</int>\n          </void>\n          <void index\="7">\n           <int>10</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <int>3353</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
