eclipse.preferences.version=1
problemStatement=ORSolitaireDiv2.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_67" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>ORSolitaireDiv2</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 600 DIV 2 - 600 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;ORSolitaireDiv2&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;i&gt;Note that the memory limit for all tasks in this SRM is 256 MB.&lt;/i&gt;&lt;/p&gt;\n&lt;i&gt;This problem statement contains subscripts that may not display properly if viewed outside of the applet.&lt;/i&gt;\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nManao is playing a solitaire game called OR-solitaire. In this game, the player starts with a number X \= 0 and should obtain the number &lt;b&gt;goal&lt;/b&gt; in one or more moves. The set of valid moves is determined by a int[] &lt;b&gt;numbers&lt;/b&gt;. In each move, the player chooses some element of &lt;b&gt;numbers&lt;/b&gt; and replaces X with the bitwise OR of X and the chosen element.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nFox Ciel wants Manao to stop playing OR-solitaire and move on with his life. She decided to erase some of the elements from &lt;b&gt;numbers&lt;/b&gt; in such a way that it becomes impossible to complete the game. Return the minimum number of elements that need to be removed to achieve this.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;ORSolitaireDiv2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;getMinimum&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[], int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int getMinimum(int[] numbers, int goal)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Notes&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;If a and b are single bits then a | b is defined as max(a, b). For two integers, A and B, in order to calculate A | B, they need to be represented in binary\: A \= (a&lt;sub&gt;n&lt;/sub&gt;...a&lt;sub&gt;1&lt;/sub&gt;)&lt;sub&gt;2&lt;/sub&gt;, B \= (b&lt;sub&gt;n&lt;/sub&gt;...b&lt;sub&gt;1&lt;/sub&gt;)&lt;sub&gt;2&lt;/sub&gt; (if the lengths of their representations are different, the shorter one is prepended with the necessary number of leading zeroes). Then A | B \= C \= (c&lt;sub&gt;n&lt;/sub&gt;...c&lt;sub&gt;1&lt;/sub&gt;)&lt;sub&gt;2&lt;/sub&gt;, where c&lt;sub&gt;i&lt;/sub&gt; \= a&lt;sub&gt;i&lt;/sub&gt; | b&lt;sub&gt;i&lt;/sub&gt;. For example, 10 | 3 \= (1010)&lt;sub&gt;2&lt;/sub&gt; | (0011)&lt;sub&gt;2&lt;/sub&gt; \= (1011)&lt;sub&gt;2&lt;/sub&gt; \= 11.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;numbers&lt;/b&gt; will contain between 1 and 20 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;numbers&lt;/b&gt; will be between 1 and 1,000,000,000.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;The elements in &lt;b&gt;numbers&lt;/b&gt; will be distinct.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;goal&lt;/b&gt; will be between 1 and 1,000,000,000.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 2, 4}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;7&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The goal of the game is to obtain X \= 7 from X \= 0. The possible moves are to replace X with bitwise OR of X and 1, bitwise OR of X and 2 and bitwise OR of X and 4. X \= 7 can be obtained only by using each of the three moves at least once, so removing any single element from &lt;b&gt;numbers&lt;/b&gt; will make the game impossible to finish.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 2, 4, 7, 8}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;7&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;In this example, Fox Ciel should remove the number 7 and one of the numbers 1, 2, 4.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{12571295, 2174218, 2015120}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;There is no need to remove elements from &lt;b&gt;numbers&lt;/b&gt;, since the game cannot be completed in its initial version.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{5, 2, 4, 52, 62, 9, 8, 3, 1, 11, 6}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;11&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{503, 505, 152, 435, 491, 512, 1023, 355, 510, 500, 502, 255, 63, 508, 509, 511, 60, 250, 254, 346}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;510&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>getMinimum</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>numbers</string>\n   </void>\n   <void method\="add">\n    <string>goal</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>7</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="5">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n          <void index\="3">\n           <int>7</int>\n          </void>\n          <void index\="4">\n           <int>8</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>7</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>12571295</int>\n          </void>\n          <void index\="1">\n           <int>2174218</int>\n          </void>\n          <void index\="2">\n           <int>2015120</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>0</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="11">\n          <void index\="0">\n           <int>5</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>4</int>\n          </void>\n          <void index\="3">\n           <int>52</int>\n          </void>\n          <void index\="4">\n           <int>62</int>\n          </void>\n          <void index\="5">\n           <int>9</int>\n          </void>\n          <void index\="6">\n           <int>8</int>\n          </void>\n          <void index\="7">\n           <int>3</int>\n          </void>\n          <void index\="8">\n           <int>1</int>\n          </void>\n          <void index\="9">\n           <int>11</int>\n          </void>\n          <void index\="10">\n           <int>6</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>11</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>3</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="20">\n          <void index\="0">\n           <int>503</int>\n          </void>\n          <void index\="1">\n           <int>505</int>\n          </void>\n          <void index\="2">\n           <int>152</int>\n          </void>\n          <void index\="3">\n           <int>435</int>\n          </void>\n          <void index\="4">\n           <int>491</int>\n          </void>\n          <void index\="5">\n           <int>512</int>\n          </void>\n          <void index\="6">\n           <int>1023</int>\n          </void>\n          <void index\="7">\n           <int>355</int>\n          </void>\n          <void index\="8">\n           <int>510</int>\n          </void>\n          <void index\="9">\n           <int>500</int>\n          </void>\n          <void index\="10">\n           <int>502</int>\n          </void>\n          <void index\="11">\n           <int>255</int>\n          </void>\n          <void index\="12">\n           <int>63</int>\n          </void>\n          <void index\="13">\n           <int>508</int>\n          </void>\n          <void index\="14">\n           <int>509</int>\n          </void>\n          <void index\="15">\n           <int>511</int>\n          </void>\n          <void index\="16">\n           <int>60</int>\n          </void>\n          <void index\="17">\n           <int>250</int>\n          </void>\n          <void index\="18">\n           <int>254</int>\n          </void>\n          <void index\="19">\n           <int>346</int>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>510</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <int>5</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
