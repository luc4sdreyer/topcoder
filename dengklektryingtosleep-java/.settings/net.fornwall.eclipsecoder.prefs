#Sun Apr 29 00:55:04 CAT 2012
eclipse.preferences.version=1
problemStatement=DengklekTryingToSleep.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?> \n<java version\="1.6.0_21" class\="java.beans.XMLDecoder"> \n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement"> \n  <void property\="className"> \n   <string>DengklekTryingToSleep</string> \n  </void> \n  <void property\="contestName"> \n   <string>SRM 532 DIV 2 - 250 points</string> \n  </void> \n  <void property\="htmlDescription"> \n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;DengklekTryingToSleep&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;Mr. Dengklek lives in the Kingdom of Ducks, where humans and ducks live together in peace and harmony. The ducks are numbered by distinct positive integers from A to B, inclusive, where A &amp;lt;\= B.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nLast night, Mr. Dengklek could not sleep, so he tried to count all the ducks in the kingdom. (It is known that counting ducks can help people to fall asleep.) When counting the ducks, Mr. Dengklek walked across an imaginary meadow and whenever he saw a new duck, he called out its number. He only called out actual duck numbers, i.e., numbers from A to B. He never called the same number twice. The numbers he called out are not necessarily in the numeric order.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nYou are given a int[] &lt;b&gt;ducks&lt;/b&gt;. The elements of &lt;b&gt;ducks&lt;/b&gt; are the numbers Mr. Dengklek called out when counting the ducks last night. It is possible that he missed some of the ducks. Obviously, the number of ducks he missed depends on the values A and B. The values of A and B are unknown to you. Compute and return the smallest possible number of ducks Mr. Dengklek might have missed.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;DengklekTryingToSleep&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;minDucks&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int minDucks(int[] ducks)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;ducks&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;ducks&lt;/b&gt; will be between 1 and 100, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;All element of &lt;b&gt;ducks&lt;/b&gt; will be distinct.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{5, 3, 2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;If A\=2 and B\=5, the only duck Mr. Dengklek missed is the duck number 4.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{58}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;If A\=B\=58, Mr. Dengklek did not miss any ducks.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{9, 3, 6, 4}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;In this case, the smallest possible number of missed ducks is 3\: the ducks with numbers 5, 7, and 8.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{7, 4, 77, 47, 74, 44}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 68&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string> \n  </void> \n  <void property\="methodName"> \n   <string>minDucks</string> \n  </void> \n  <void property\="parameterNames"> \n   <void method\="add"> \n    <string>ducks</string> \n   </void> \n  </void> \n  <void property\="parameterTypes"> \n   <void method\="add"> \n    <class>[Ljava.lang.Integer;</class> \n   </void> \n  </void> \n  <void property\="returnType"> \n   <class>java.lang.Integer</class> \n  </void> \n  <void property\="testCases"> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="3"> \n         <void index\="0"> \n          <int>5</int> \n         </void> \n         <void index\="1"> \n          <int>3</int> \n         </void> \n         <void index\="2"> \n          <int>2</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>1</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="1"> \n         <void index\="0"> \n          <int>58</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>0</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="4"> \n         <void index\="0"> \n          <int>9</int> \n         </void> \n         <void index\="1"> \n          <int>3</int> \n         </void> \n         <void index\="2"> \n          <int>6</int> \n         </void> \n         <void index\="3"> \n          <int>4</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>3</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="6"> \n         <void index\="0"> \n          <int>7</int> \n         </void> \n         <void index\="1"> \n          <int>4</int> \n         </void> \n         <void index\="2"> \n          <int>77</int> \n         </void> \n         <void index\="3"> \n          <int>47</int> \n         </void> \n         <void index\="4"> \n          <int>74</int> \n         </void> \n         <void index\="5"> \n          <int>44</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>68</int> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="10"> \n         <void index\="0"> \n          <int>1</int> \n         </void> \n         <void index\="1"> \n          <int>2</int> \n         </void> \n         <void index\="2"> \n          <int>3</int> \n         </void> \n         <void index\="3"> \n          <int>4</int> \n         </void> \n         <void index\="4"> \n          <int>5</int> \n         </void> \n         <void index\="5"> \n          <int>6</int> \n         </void> \n         <void index\="6"> \n          <int>7</int> \n         </void> \n         <void index\="7"> \n          <int>8</int> \n         </void> \n         <void index\="8"> \n          <int>9</int> \n         </void> \n         <void index\="9"> \n          <int>10</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <int>0</int> \n     </void> \n    </object> \n   </void> \n  </void> \n </object> \n</java> \n
