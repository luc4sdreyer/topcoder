#Thu Jun 14 22:36:42 CAT 2012
eclipse.preferences.version=1
problemStatement=EvenRoute.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?> \n<java version\="1.6.0_22" class\="java.beans.XMLDecoder"> \n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement"> \n  <void property\="className"> \n   <string>EvenRoute</string> \n  </void> \n  <void property\="contestName"> \n   <string>SRM 538 DIV 2 - 500 points</string> \n  </void> \n  <void property\="htmlDescription"> \n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;EvenRoute&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;Fox Ciel has stumbled upon a new problem\: In this problem you will visit some points with integer coordinates in the Cartesian plane. Initially, you are located at the point (0,0). In each step, you can move from your current point to one of the four directly adjacent points.\nI.e., if you are at (x,y), you can move to one of the points (x,y+1), (x,y-1), (x+1,y), and (x-1,y).&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nYou are given two int[]s &lt;b&gt;x&lt;/b&gt; and &lt;b&gt;y&lt;/b&gt;, each containing N elements.\nTogether, &lt;b&gt;x&lt;/b&gt; and &lt;b&gt;y&lt;/b&gt; describe N distinct points in the Cartesian plane\:\nfor 0 &amp;lt;\= i &amp;lt; N, point i has the coordinates (&lt;b&gt;x&lt;/b&gt;[i],&lt;b&gt;y&lt;/b&gt;[i]).&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nThe goal is to find a sequence of steps that satisfies the following criteria\:&lt;ul&gt;\n&lt;li&gt;The starting point is (0,0).&lt;/li&gt;\n&lt;li&gt;The sequence visits each of the N given points at least once.&lt;/li&gt;\n&lt;li&gt;The sequence finishes in one of the given points.&lt;/li&gt;\n&lt;/ul&gt;\n\nMr. K claims to have solved this problem but Ciel does not believe him. Ciel has prepared a method to verify Mr. K&apos;s claims. Given an int &lt;b&gt;wantedParity&lt;/b&gt;, the parity of the number of steps in the sequence found by Mr. K, Ciel will find if it is possible to find a sequence that follows the previously mentioned conditions and a new one\:&lt;br&gt;&lt;/br&gt;\n\n&lt;ul&gt;&lt;li&gt;The parity of the total number of steps is &lt;b&gt;wantedParity&lt;/b&gt;. In other words, if &lt;b&gt;wantedParity&lt;/b&gt;\=0 then the total number of steps must be even, and if &lt;b&gt;wantedParity&lt;/b&gt;\=1 then the total number of steps must be odd.&lt;/li&gt;\n&lt;/ul&gt;\n\nReturn &quot;CAN&quot; (quotes for clarity) if at least one such sequence of steps exists, and &quot;CANNOT&quot; otherwise.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;EvenRoute&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;isItPossible&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[], int[], int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;String isItPossible(int[] x, int[] y, int wantedParity)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;wantedParity&lt;/b&gt; will be 0 or 1.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;x&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;y&lt;/b&gt; will contain the same number of elements as &lt;b&gt;x&lt;/b&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;x&lt;/b&gt; and &lt;b&gt;y&lt;/b&gt; will be between -1000000 and 1000000, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;No point in the input will be equal to (0,0).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;No pair of points in the input will be equal.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{-1,-1,1,1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{-1,1,1,-1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;CAN&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;A possible sequence containing an even number of steps\:\n&lt;ul&gt;&lt;li&gt;2 steps\: (0,0) -&amp;gt; (-1,-1).&lt;/li&gt;\n&lt;li&gt;2 steps\: (-1,-1) -&amp;gt; (-1,1).&lt;/li&gt;\n&lt;li&gt;2 steps\: (-1,1) -&amp;gt; (1,1).&lt;/li&gt;\n&lt;li&gt;2 steps\: (1,1) -&amp;gt; (1,-1).&lt;/li&gt;&lt;/ul&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{-5,-3,2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2,0,3}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;CAN&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;A possible sequence containing an odd number of steps\:\n\n&lt;ul&gt;&lt;li&gt;7 steps\: (0,0) -&amp;gt; (-5,2).&lt;/li&gt;\n&lt;li&gt;4 steps\: (-5,2) -&amp;gt; (-3,0).&lt;/li&gt;\n&lt;li&gt;8 steps\: (-3,0) -&gt; (2,3).&lt;/li&gt;&lt;/ul&gt;\n\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1001, -4000}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{0,0}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;CAN&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The shortest sequence that visits all the given points is the sequence that first goes to (1001,0) and then to (-4000,0).&lt;br&gt;&lt;/br&gt;\nNote that this sequence does not have an odd amount of steps.&lt;br&gt;&lt;/br&gt;\nHowever, there is a longer sequence with an odd number of steps\: (0,0) -&gt; (-4000,0) -&gt; (1001, 0).&lt;br&gt;&lt;/br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{11, 21, 0}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{-20, 42, 7}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;CANNOT&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{0, 6}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{10, -20}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;CANNOT&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string> \n  </void> \n  <void property\="methodName"> \n   <string>isItPossible</string> \n  </void> \n  <void property\="parameterNames"> \n   <void method\="add"> \n    <string>x</string> \n   </void> \n   <void method\="add"> \n    <string>y</string> \n   </void> \n   <void method\="add"> \n    <string>wantedParity</string> \n   </void> \n  </void> \n  <void property\="parameterTypes"> \n   <void method\="add"> \n    <class>[Ljava.lang.Integer;</class> \n   </void> \n   <void method\="add"> \n    <class>[Ljava.lang.Integer;</class> \n   </void> \n   <void method\="add"> \n    <class>java.lang.Integer</class> \n   </void> \n  </void> \n  <void property\="returnType"> \n   <class>java.lang.String</class> \n  </void> \n  <void property\="testCases"> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="3"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="4"> \n         <void index\="0"> \n          <int>-1</int> \n         </void> \n         <void index\="1"> \n          <int>-1</int> \n         </void> \n         <void index\="2"> \n          <int>1</int> \n         </void> \n         <void index\="3"> \n          <int>1</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="4"> \n         <void index\="0"> \n          <int>-1</int> \n         </void> \n         <void index\="1"> \n          <int>1</int> \n         </void> \n         <void index\="2"> \n          <int>1</int> \n         </void> \n         <void index\="3"> \n          <int>-1</int> \n         </void> \n        </array> \n       </void> \n       <void index\="2"> \n        <int>0</int> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>CAN</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="3"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="3"> \n         <void index\="0"> \n          <int>-5</int> \n         </void> \n         <void index\="1"> \n          <int>-3</int> \n         </void> \n         <void index\="2"> \n          <int>2</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="3"> \n         <void index\="0"> \n          <int>2</int> \n         </void> \n         <void index\="1"> \n          <int>0</int> \n         </void> \n         <void index\="2"> \n          <int>3</int> \n         </void> \n        </array> \n       </void> \n       <void index\="2"> \n        <int>1</int> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>CAN</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="3"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="2"> \n         <void index\="0"> \n          <int>1001</int> \n         </void> \n         <void index\="1"> \n          <int>-4000</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="2"> \n         <void index\="0"> \n          <int>0</int> \n         </void> \n         <void index\="1"> \n          <int>0</int> \n         </void> \n        </array> \n       </void> \n       <void index\="2"> \n        <int>1</int> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>CAN</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="3"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="3"> \n         <void index\="0"> \n          <int>11</int> \n         </void> \n         <void index\="1"> \n          <int>21</int> \n         </void> \n         <void index\="2"> \n          <int>0</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="3"> \n         <void index\="0"> \n          <int>-20</int> \n         </void> \n         <void index\="1"> \n          <int>42</int> \n         </void> \n         <void index\="2"> \n          <int>7</int> \n         </void> \n        </array> \n       </void> \n       <void index\="2"> \n        <int>0</int> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>CANNOT</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="3"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="2"> \n         <void index\="0"> \n          <int>0</int> \n         </void> \n         <void index\="1"> \n          <int>6</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="2"> \n         <void index\="0"> \n          <int>10</int> \n         </void> \n         <void index\="1"> \n          <int>-20</int> \n         </void> \n        </array> \n       </void> \n       <void index\="2"> \n        <int>1</int> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>CANNOT</string> \n     </void> \n    </object> \n   </void> \n  </void> \n </object> \n</java> \n
