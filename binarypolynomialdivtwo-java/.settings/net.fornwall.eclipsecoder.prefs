eclipse.preferences.version=1
problemStatement=BinaryPolynomialDivTwo.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_10" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>BinaryPolynomialDivTwo</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 536 DIV 2 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;BinaryPolynomialDivTwo&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;i&gt;Warning\: This problem statement contains superscripts and/or subscripts. It may not display properly outside of the applet.&lt;/i&gt;&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\nIn this problem we will consider &lt;i&gt;binary polynomials.&lt;/i&gt; A binary polynomial can be written in the following form\:\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nP(x) \= &lt;b&gt;a&lt;/b&gt;[0] * x&lt;sup&gt;0&lt;/sup&gt; + &lt;b&gt;a&lt;/b&gt;[1] * x&lt;sup&gt;1&lt;/sup&gt; + ... + &lt;b&gt;a&lt;/b&gt;[n] * x&lt;sup&gt;n&lt;/sup&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nThe values &lt;b&gt;a&lt;/b&gt;[i] are integer constants (called coefficients). For a binary polynomial we must have &lt;b&gt;a&lt;/b&gt;[n] \= 1 and each other &lt;b&gt;a&lt;/b&gt;[i] must be either 0 or 1. The number n is called the degree of the polynomial.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nSeveral examples\:\n&lt;ul&gt;\n&lt;li&gt; P(x) \= 1 * x&lt;sup&gt;0&lt;/sup&gt; + 0 * x&lt;sup&gt;1&lt;/sup&gt; + 1 * x&lt;sup&gt;2&lt;/sup&gt; is a binary polynomial of degree 2. &lt;/li&gt;\n&lt;li&gt; P(x) \= 0 * x&lt;sup&gt;0&lt;/sup&gt; + 1 * x&lt;sup&gt;1&lt;/sup&gt; + 0 * x&lt;sup&gt;2&lt;/sup&gt; + 1 * x&lt;sup&gt;3&lt;/sup&gt; is a binary polynomial of degree 3. &lt;/li&gt;\n&lt;li&gt; P(x) \= 1 * x&lt;sup&gt;0&lt;/sup&gt; is a binary polynomial of degree 0. &lt;/li&gt;\n&lt;li&gt; P(x) \= 0 * x&lt;sup&gt;0&lt;/sup&gt; + 3 * x&lt;sup&gt;1&lt;/sup&gt; - 1 * x&lt;sup&gt;2&lt;/sup&gt; is not a binary polynomial, because each coefficient must be a 0 or a 1. &lt;/li&gt;\n&lt;li&gt; P(x) \= 0 * x&lt;sup&gt;0&lt;/sup&gt; is not a valid binary polynomial, because the last of the values a[i] must be 1. &lt;/li&gt;\n&lt;/ul&gt;\nWe can evaluate a binary polynomial for the inputs x \= 0 and x \= 1. In order to do so, we just have to substitute 0 or 1 for x in the above expression, compute the value of the expression and take the remainder it gives when divided by two. For example, if P(x) \= 1 * x&lt;sup&gt;0&lt;/sup&gt; + 0 * x&lt;sup&gt;1&lt;/sup&gt; + 1 * x&lt;sup&gt;2&lt;/sup&gt;, then P(0) \= 1 * 0&lt;sup&gt;0&lt;/sup&gt; + 0 * 0&lt;sup&gt;1&lt;/sup&gt; + 1 * 0&lt;sup&gt;2&lt;/sup&gt; \= 1 and P(1) \= 1 * 1&lt;sup&gt;0&lt;/sup&gt; + 0 * 1&lt;sup&gt;1&lt;/sup&gt; + 1 * 1&lt;sup&gt;2&lt;/sup&gt; \= 0 (modulo 2). Note that in this problem we assume that x&lt;sup&gt;0&lt;/sup&gt; \= 1 for all x. In particular, also 0&lt;sup&gt;0&lt;/sup&gt; \= 1.\n&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nWe call an integer x (where x is 0 or 1) a &lt;i&gt;root&lt;/i&gt; of the binary polynomial P if P(x) \= 0. You are given a binary polynomial P as the array &lt;b&gt;a&lt;/b&gt; of its coefficients. Return the number of roots of that binary polynomial.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;BinaryPolynomialDivTwo&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;countRoots&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int countRoots(int[] a)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;The degree of P will be between 0 and 49, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;a&lt;/b&gt; will contain exactly n+1 elements, where n is the degree of P.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;a&lt;/b&gt; will be either 0 (zero) or 1 (one).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;a&lt;/b&gt;[n] will be equal to 1 (one).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 0, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The example from the problem statement. The only root of this binary polynomial is 1.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{0, 1, 0, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;This is the maximum possible answer; both 0 and 1 are roots of this binary polynomial.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;This binary polynomial has no roots - it always evaluates to 1.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>countRoots</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>a</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>0</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>0</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>0</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="1">\n          <void index\="0">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>0</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="13">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>0</int>\n          </void>\n          <void index\="2">\n           <int>0</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n          <void index\="4">\n           <int>1</int>\n          </void>\n          <void index\="5">\n           <int>0</int>\n          </void>\n          <void index\="6">\n           <int>0</int>\n          </void>\n          <void index\="7">\n           <int>1</int>\n          </void>\n          <void index\="8">\n           <int>0</int>\n          </void>\n          <void index\="9">\n           <int>1</int>\n          </void>\n          <void index\="10">\n           <int>0</int>\n          </void>\n          <void index\="11">\n           <int>1</int>\n          </void>\n          <void index\="12">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>0</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.Integer" length\="50">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>0</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n          <void index\="4">\n           <int>1</int>\n          </void>\n          <void index\="5">\n           <int>1</int>\n          </void>\n          <void index\="6">\n           <int>0</int>\n          </void>\n          <void index\="7">\n           <int>0</int>\n          </void>\n          <void index\="8">\n           <int>1</int>\n          </void>\n          <void index\="9">\n           <int>1</int>\n          </void>\n          <void index\="10">\n           <int>0</int>\n          </void>\n          <void index\="11">\n           <int>1</int>\n          </void>\n          <void index\="12">\n           <int>0</int>\n          </void>\n          <void index\="13">\n           <int>1</int>\n          </void>\n          <void index\="14">\n           <int>1</int>\n          </void>\n          <void index\="15">\n           <int>0</int>\n          </void>\n          <void index\="16">\n           <int>0</int>\n          </void>\n          <void index\="17">\n           <int>0</int>\n          </void>\n          <void index\="18">\n           <int>0</int>\n          </void>\n          <void index\="19">\n           <int>0</int>\n          </void>\n          <void index\="20">\n           <int>1</int>\n          </void>\n          <void index\="21">\n           <int>0</int>\n          </void>\n          <void index\="22">\n           <int>1</int>\n          </void>\n          <void index\="23">\n           <int>1</int>\n          </void>\n          <void index\="24">\n           <int>0</int>\n          </void>\n          <void index\="25">\n           <int>0</int>\n          </void>\n          <void index\="26">\n           <int>0</int>\n          </void>\n          <void index\="27">\n           <int>1</int>\n          </void>\n          <void index\="28">\n           <int>1</int>\n          </void>\n          <void index\="29">\n           <int>1</int>\n          </void>\n          <void index\="30">\n           <int>1</int>\n          </void>\n          <void index\="31">\n           <int>0</int>\n          </void>\n          <void index\="32">\n           <int>0</int>\n          </void>\n          <void index\="33">\n           <int>0</int>\n          </void>\n          <void index\="34">\n           <int>1</int>\n          </void>\n          <void index\="35">\n           <int>1</int>\n          </void>\n          <void index\="36">\n           <int>1</int>\n          </void>\n          <void index\="37">\n           <int>0</int>\n          </void>\n          <void index\="38">\n           <int>1</int>\n          </void>\n          <void index\="39">\n           <int>0</int>\n          </void>\n          <void index\="40">\n           <int>1</int>\n          </void>\n          <void index\="41">\n           <int>1</int>\n          </void>\n          <void index\="42">\n           <int>1</int>\n          </void>\n          <void index\="43">\n           <int>1</int>\n          </void>\n          <void index\="44">\n           <int>0</int>\n          </void>\n          <void index\="45">\n           <int>1</int>\n          </void>\n          <void index\="46">\n           <int>0</int>\n          </void>\n          <void index\="47">\n           <int>0</int>\n          </void>\n          <void index\="48">\n           <int>1</int>\n          </void>\n          <void index\="49">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
